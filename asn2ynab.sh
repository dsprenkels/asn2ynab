#!/bin/bash

# Authors:
#   - Gerdriaan Mulder <mrngm@moeilijklastig.nl>
#   - Daan Sprenkels <daan@dsprenkels.com>
#
# This script is based on the original asn2ynab.sh script from Gerdriaan
# Mulder, from whom I have a license to modify and redistribute future
# versions with attribution.

readonly ASN_COMMA=','
readonly YNAB_COMMA=','

if [[ ($# != 1 && $# != 2) || $1 == "--help" || $1 == "-h" ]]; then
	echo >&2 "Usage: $0 infile [outfile]"
	echo >&2
	echo >&2 "This script will convert a CSV export generated by the Dutch ASN bank to a CSV"
	echo >&2 "file that can be imported into You Need A Budget (YNAB)."
	echo >&2
	echo >&2 "In the ASN interface, under 'Transacties downloaden', use the 'CSV' file format"
	echo >&2 "(that is, not CSV 2004).  Then call this script with the CSV export as argument."
	exit 0
fi

INFILE="$1"

OUTFILE=""
if [[ $# == 2 ]]; then
	OUTFILE="$2"
else
	# Create a new file with '_ynab' appended to the name.
	infile_ext="${INFILE##*.}"
	infile_noext="${INFILE%.*}"
	OUTFILE="${infile_noext}_ynab.${infile_ext}"
	echo >&2 "Writing output to '$OUTFILE'"
fi

echo >"$OUTFILE" "Date${YNAB_COMMA}Payee${YNAB_COMMA}Category${YNAB_COMMA}Memo${YNAB_COMMA}Outflow${YNAB_COMMA}Inflow"
while IFS='' read -r line; do
	line=$(echo "$line" | sed -e 's/\r//g'| tr -d \")

	# ASN export already uses DD-MM-YYYY, so no need to convert.
	DATE=$(echo "$line" | cut -d "$ASN_COMMA" -f 1)
	if [[ "$DATE" == "Datum" ]]; then
		# This line contains the CSV headers, skip.
		continue
	fi
	PAYEE=$(echo "$line" | cut -d "$ASN_COMMA" -f 4 | tr '[:lower:]' '[:upper:]') # lowercase payee, convert to uppercase
	AFBIJ=$(echo "$line" | cut -d "$ASN_COMMA" -f 11)
	AMOUNT=$(echo "$line" | cut -d "$ASN_COMMA" -f 11) # ASN already has dot separator; no need to convert.
	TX_TYPE=$(echo "$line" | cut -d "$ASN_COMMA" -f 15)
	MEMO=$(echo "$line" | cut -d "$ASN_COMMA" -f 18)

	INFLOW=""
	OUTFLOW=""
	if [[ "${AFBIJ:0:1}" == "-" ]]; then
		OUTFLOW="${AMOUNT#-}"
	elif [[ "${AFBIJ:0:1}" != "-" ]]; then
		INFLOW="$AMOUNT"
	fi

	if [[ "${PAYEE}x" == "x" ]]; then
		# Empty payee, we have to extract it from MEMO, and reset $PAYEE
		PAYEE=${MEMO%>*}
	fi

	echo >>"$OUTFILE" "${DATE}${YNAB_COMMA}\"${PAYEE}\"${YNAB_COMMA}${YNAB_COMMA}\"${TX_TYPE} / ${MEMO}\"${YNAB_COMMA}${OUTFLOW}${YNAB_COMMA}${INFLOW}"

done <"$INFILE"
